package com.company;

import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {
    private static final int QUOTE_CHARACTER = '\'';
    private static final int DOUBLE_QUOTE_CHARACTER = '"';


    public static void main(String[] args) throws IOException {

        List<Object> numbers = streamTokenizerWithDefaultConfiguration();
List<Object> result=streamTokenizerWithDefaultConfiguration();

        for (int i = 0; i <= numbers.size()-3; i++) {
            if (numbers.get(i) == numbers.get(i + 1) && numbers.get(i) == numbers.get(i + 2)) {
                for (int j = i + 3; j < numbers.size(); j++) {
                    if (numbers.get(i + 2) == numbers.get(j)) numbers.remove(j);
                    else break;
                }
             //   List<Object>sublist= numbers.subList(i,i+3);
                numbers.subList(i,i+3).clear();
                i=0;
            }

        }
        System.out.println(numbers.toString());
    }


    public static List<Object> streamTokenizerWithDefaultConfiguration() throws IOException {
        StreamTokenizer streamTokenizer = new StreamTokenizer(new FileReader("input.txt"));
        List<Object> tokens = new ArrayList<Object>();

        int currentToken = streamTokenizer.nextToken();
        while (currentToken != StreamTokenizer.TT_EOF) {

            if (streamTokenizer.ttype == StreamTokenizer.TT_NUMBER) {
                tokens.add((int) streamTokenizer.nval);
            } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD
                    || streamTokenizer.ttype == QUOTE_CHARACTER
                    || streamTokenizer.ttype == DOUBLE_QUOTE_CHARACTER) {
                tokens.add(streamTokenizer.sval);
            } else {
                tokens.add((char) currentToken);
            }

            currentToken = streamTokenizer.nextToken();
        }

        return tokens;
    }
}
